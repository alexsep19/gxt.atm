<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <!-- POM file generated with GWT webAppCreator -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mdm.gxt</groupId>
  <artifactId>gxt.atm</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>GWT Maven Archetype</name>

  <properties>
    <!-- Convenience property to set the GWT version -->
    <gwtVersion>2.6.1-rc2</gwtVersion>
    <gxtVersion>3.1.0</gxtVersion>
    <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
  <!-- Mine ===================-->
      <dependency>
        <groupId>com.mdm.jv</groupId>
        <artifactId>jv.j2f</artifactId>
        <version>1.0.0-SNAPSHOT</version>
<!--         <scope>provided</scope>
 -->
      </dependency>
      <dependency>
        <groupId>com.mdm.jv</groupId>
        <artifactId>jv.userinfo</artifactId>
        <version>1.0.0-SNAPSHOT</version>
<!--          <scope>provided</scope>
--> 
      </dependency>
      <dependency>
         <groupId>com.mdm.jpa</groupId>
         <artifactId>jpa.reporter.2</artifactId>
         <version>2.0.0-SNAPSHOT</version>
          <scope>provided</scope>
      </dependency>
      <dependency>
         <groupId>com.mdm.gxt</groupId>
         <artifactId>gx_comps</artifactId>
         <version>1.1.0-SNAPSHOT</version>
<!--          <scope>provided</scope>
 --> 
      </dependency>
      
  <!-- ========================-->
  <!-- GXT -->  
    <dependency>
	  <groupId>com.sencha.gxt</groupId>
	  <artifactId>gxt</artifactId>
	  <version>${gxtVersion}</version>
<!--   	  <scope>provided</scope> -->  
    </dependency>
    <dependency>
	  <groupId>com.sencha.gxt</groupId>
	  <artifactId>gxt-legacy</artifactId>
	  <version>${gxtVersion}</version>
<!-- 	  <scope>provided</scope>  -->
    </dependency>
<!-- GWT -->     
    <dependency>
	  <groupId>com.google.gwt</groupId>
	  <artifactId>gwt-user</artifactId>
<!-- 	  <version>2.6.1-rc2</version> -->
	  <version>${gwtVersion}</version>
	  <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.7</version>
      <scope>test</scope>
    </dependency>
<!-- RequestFactory server -->    
     <dependency>
      <groupId>com.google.gwt</groupId>
      <artifactId>gwt-servlet</artifactId>
      <version>${gwtVersion}</version>
<!--       <scope>provided</scope> --> 
    </dependency>     
    <dependency>
      <groupId>com.google.web.bindery</groupId>
      <artifactId>requestfactory-server</artifactId>
      <version>${gwtVersion}</version>
<!--       <scope>provided</scope> --> 
    </dependency>
    <dependency>
      <groupId>com.google.web.bindery</groupId>
      <artifactId>requestfactory-apt</artifactId>
      <version>${gwtVersion}</version>
<!--       <scope>provided</scope> --> 
    </dependency> 
<!-- RequestFactory will use JSR 303 javax.validation if you let it -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
      <version>4.1.0.Final</version>
      <exclusions>
        <exclusion>
          <groupId>javax.xml.bind</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
<!-- Required by Hibernate validator because slf4j-log4j is
     optional in the hibernate-validator POM -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.6.1</version>
    </dependency>
    
<!-- fileupload servlet -->
    <dependency>
	  <groupId>commons-fileupload</groupId>
	  <artifactId>commons-fileupload</artifactId>
	  <version>1.2</version>
   </dependency>
<!--     <dependency>
	  <groupId>org.apache.commons</groupId>
	  <artifactId>commons-io</artifactId>
	  <version>1.3.2</version>
    </dependency> -->
<!-- json parser -->
    <dependency>
	  <groupId>com.googlecode.json-simple</groupId>
	  <artifactId>json-simple</artifactId>
	  <version>1.1.1</version>
	  <scope>provided</scope>
    </dependency>
<!--  persistence -->
   <dependency>
  		<groupId>org.eclipse.persistence</groupId>
  		<artifactId>eclipselink</artifactId>
  		<version>2.4.2</version>
  		<scope>provided</scope>
   </dependency>
   <dependency>
  		<groupId>org.eclipse.persistence</groupId>
  		<artifactId>org.eclipse.persistence.jpa</artifactId>
  		<version>2.4.2</version>
  		<scope>provided</scope>
  	</dependency>
   <dependency>
  		<groupId>org.eclipse.persistence</groupId>
  		<artifactId>org.eclipse.persistence.oracle</artifactId>
  		<version>2.4.2</version>
  		<scope>provided</scope>
  	</dependency>
     
    <dependency>
	  <groupId>net.sf.jasperreports</groupId>
	  <artifactId>jasperreports</artifactId>
	  <version>4.5.0</version>
	  <scope>provided</scope>
    </dependency>
<!-- REST     
    <dependency>
	  <groupId>javax.annotation</groupId>
	  <artifactId>jsr250-api</artifactId>
	  <version>1.0</version>
	  <scope>provided</scope>
    </dependency>
   <dependency>
	     <groupId>javax.ws.rs</groupId>
	     <artifactId>jsr311-api</artifactId>
	     <version>1.1.1</version>
  	     <scope>provided</scope>
   </dependency>
   <dependency>
	 <groupId>javax.ejb</groupId>
	 <artifactId>javax.ejb-api</artifactId>
	 <version>3.2</version>
	 <scope>provided</scope>
   </dependency>-->
<!-- ORACLE XML 
   <dependency>
     <groupId>oracle</groupId>
     <artifactId>xdb</artifactId>
     <version>11.1.1.2.0</version>
	 <scope>provided</scope>
   </dependency>     
   <dependency>
	 <groupId>com.oracle</groupId>
	 <artifactId>ojdbc14</artifactId>
	 <version>10.2.0.4.0</version>
	 <scope>provided</scope>
   </dependency>
   <dependency>
	 <groupId>com.oracle</groupId>
	 <artifactId>classes12</artifactId>
	 <version>10.2.0.2.0</version>
	 <scope>provided</scope>
   </dependency>
   <dependency>
   <groupId>oracle</groupId>
     <artifactId>xmlparserv2</artifactId>
     <version>11.1.1.2.0</version>
	 <scope>provided</scope>
   </dependency>  
-->     
  </dependencies>

  <build>
    <!-- Generate compiled stuff in the folder used for developing mode -->
    <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
    <plugins>
    <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
        <dependencies>
          <!-- Need to run the RF Validation tool. This works on both the command-line
               and in Eclipse, provided that m2e-apt is installed. -->
          <dependency>
            <groupId>com.google.web.bindery</groupId>
            <artifactId>requestfactory-apt</artifactId>
            <version>${gwtVersion}</version>
          </dependency>
        </dependencies>
       </plugin>
      <!-- GWT Maven Plugin       -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>gwt-maven-plugin</artifactId>
         <version>${gwtVersion}</version> 
<!--        <version>2.5.1</version>-->
        <dependencies>
          <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwtVersion}</version>
          </dependency>
          <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-dev</artifactId>
            <version>${gwtVersion}</version>
          </dependency>
          <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-codeserver</artifactId>
            <version>${gwtVersion}</version>
          </dependency>
        </dependencies>
        
        <executions>
          <execution>
            <phase>prepare-package</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
        </executions>
        <!-- Plugin configuration. There are many available options, see 
          gwt-maven-plugin documentation at codehaus.org -->
        <configuration>
          <gwtSdkFirstInClasspath>true</gwtSdkFirstInClasspath>
          <runTarget>startPoint.html</runTarget>
          <hostedWebapp>${webappDirectory}</hostedWebapp>
          <compileReport>true</compileReport>
          <logLevel>INFO</logLevel>
          <style>${gwt.style}</style>
          <optimizationLevel>0</optimizationLevel>
          <disableCastChecking>true</disableCastChecking>
          <disableClassMetadata>true</disableClassMetadata>
          <extraJvmArgs>-Dgwt.jjs.permutationWorkerFactory=com.google.gwt.dev.ThreadedPermutationWorkerFactory -Xmx1024M -Xms128M -XX:PermSize=64M -XX:MaxPermSize=128M</extraJvmArgs> 
           <compileSourcesArtifacts>
             <compileSourcesArtifact>com.mdm.gxt:gx_comps</compileSourcesArtifact>
          </compileSourcesArtifacts> 
          <localWorkers>3</localWorkers>
           <properties>
                <gwt.compiler.localWorkers>3</gwt.compiler.localWorkers>
          </properties> 
        </configuration>
      </plugin>
      <!-- Copy static web files before executing gwt:run -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.4.2</version>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${webappDirectory}</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/webapp</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
